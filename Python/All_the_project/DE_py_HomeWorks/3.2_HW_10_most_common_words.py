"""В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
Не учитывать знаки препинания и регистр символов.
За основу возьмите любую статью из википедии или из документации к языку."""

text = "Нобелевскую премию не получили крупнейшие экономисты (например, Дж. Робинсон, Н. Калдор, А. Лернер, " \
       "Д. Патинкин), по существу, из-за того, что умерли, не дожив до присуждения им награды по совокупности " \
       "научных заслуг. В. В. Леонтьев 14 апреля 1997 года отмечал: «…продолжение деятельности Нобелевского комитета " \
       "проблематично. Думаю, что уже сейчас его внимание постепенно переключается с экономистов-теоретиков на " \
       "институциональных экономистов. И теперь возникает проблема, поскольку в конкретных экономических исследованиях " \
       "можно, по крайней мере, говорить о какой-то иерархии, а также крупных шагах вперёд, прорывах, тогда как в " \
       "институциональной школе я действительно не вижу никаких крупных прорывов»[3]. Потомки основателя Нобелевской " \
       "премии не поддерживают номинацию в области экономики: «Эту премию следует критиковать по двум причинам. " \
       "Во-первых, это сбивающее с толку вторжение в понятие „Нобелевская премия“ и всё, что это значит. " \
       "Во-вторых, премия банка односторонне награждает западные экономические исследования и создание теорий. " \
       "Завещание Альфреда Нобеля не являлось причудой, оно было продумано. Его письма свидетельствуют о том, что " \
       "он не любил экономистов. <…> Я не силен в экономике, я ничего не знаю об отдельных лауреатах. " \
       "Но что-то здесь должно быть неправильно: премией награждают западных экономистов, исследования и выводы " \
       "которых направлены на происходящее под их влиянием здесь. Я могу представить саркастические высказывания " \
       "Альфреда Нобеля, если бы он услышал о таких лауреатах», — пишет доктор юриспруденции Петер Нобель[4]."

new_text = ''
new_dict = dict()
for char in text:
    if char.isalpha() or char == ' ':
        new_text += char
    else:
        new_text += ' '

new_list = new_text.lower().strip().split()
for word in set(new_list):
    new_dict[word] = new_list.count(word)

max_len = len(max(new_list, key=len))

LIMIT = 10
count = 0

for word, number in sorted(new_dict.items(), key=lambda x: x[1], reverse=True)[:10]:
    print(f'{word:<{max_len}}\t {number:<3}')
