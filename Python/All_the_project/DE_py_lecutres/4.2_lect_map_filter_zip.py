# map(function, iterable)
#-------------------------------------------------------------------------------------
# Функция применяется к каждому элементу последовательности и возвращает map итератор.
"""
texts = ['Привет', 'ЗДАРОВА', 'привеТСТвую']
res = map(lambda x: x.lower(), texts)
print(*res)
"""
# filter(function, iterable)
#-------------------------------------------------------------------------------------
# Функция применяется к каждому элементу последовательности,
# и элемент остается, если True. Возвращает итератор.
"""
numbers = [42, -73, 1024]
res = tuple(filter(lambda x: x > 0, numbers))
print(res)
"""
# zip(*iterables, strict=False)
#-------------------------------------------------------------------------------------
# Функция принимает НЕСКОЛЬКО последовательностей и итерируется по ним параллельно(по индексам)
# Если strict=False, будет ошибка, если разное количество элементов в последовательностях.
# Если strict=False НЕ передавать, zip остановится, когда дойдет до конца самой короткой последовательности

names = ['Иван', 'Николай', 'Алексей']
salaries = [25_000, 80_500, 32_000]
awards = [0.1, 0.25, 0.13, 0.99]            # четвертое значение проигнорировано
for name, salary, award in zip(names, salaries, awards):
    print(f'{name} заработал {salary:.2f} с вознаграждением {salary * award:.2f}')