"""
text = 'Hello World!'
new_text = text.replace('l', 'L', 2)        # Заменить 2 раза
print(text, new_text, sep='\n')

print(text.count('l'))  # количество вхождений
print(text.index('l'))  # индекс первого вхождения
print(text.find('l'))   # индекс первого вхождения
print(text.find('z'))   # -1 т.к. не нашли z. .index() выдал бы ошибку!

# Варианты форматирования

name = 'Alex'
age = 12
text = 'Меня зовут %s и мне %d лет' % (name, age)  # s - string, d - digit # редко используется
print(text)

text = 'Меня зовут {} и мне {} лет'.format(name, age)
print(text)

# фигурные скобки

print(f'Вывести {{фигурные скобки}}')


# f - float
pi = 3.1415
print(f'Число pi с точностью два знака после запятой: {pi:.2f}')

# выравнивание: > вправо, < влево, ^  по центру

data = [3234, 3456, 7654, 2345456767, 34563456, 456345]
for item in data:
    print(f'{item:^10}') # выравнивание по правому краю, а на всю запись отводим - 10 символов.

from math import pi

# Как выводить большие числа с подчеркиванием

num = 2 * pi * data[3]
print(f'{num = :_}')

# *_
a, b, c, *_ = input('Введите 3 числа через пробел: ').split()
# Если пользователь введет больше 3-х чисел, ошибки не будет. Все, что > 3-х сохранится во врем.переменную _ в
# виде кортежа.
"""

text = 'Однажды в студеную зимнюю пору'
print(text.startswith('Однажды'))
print(text.endswith('зимнюю', 0, -5))   # Исключили из поиска 5 элементов с конца. Поиск с нулевой ячейки.
